#!/bin/bash

# üìç Configura√ß√µes iniciais
DATA_HORA=$(date "+%Y-%m-%d_%H-%M-%S")
LOG_DIR="/home/site4have/logs"
BACKUP_DIR="/home/site4have/backups"
mkdir -p "$LOG_DIR" "$BACKUP_DIR"
LOG_FILE="$LOG_DIR/remover-site.log"

# üåê Dom√≠nio como argumento obrigat√≥rio
DOMAIN="$1"
if [ -z "$DOMAIN" ]; then
  echo "‚ùå Uso: ./remover-site.sh dominio.com.br" | tee -a "$LOG_FILE"
  exit 1
fi

# üì¶ Nomes
SITE_NAME="$DOMAIN"
SANITIZED_NAME=$(echo "$SITE_NAME" | sed 's/\./_/g')
CONTAINER_NAME="wp_${SANITIZED_NAME}"
SITE_DIR="/home/site4have/sites/$SITE_NAME"
CADDY_FILE="/home/site4have/Caddy/sites/${SANITIZED_NAME}.conf"
DB_NAME="$SANITIZED_NAME"
DB_USER="$SANITIZED_NAME"

echo -e "\nüö® [$DATA_HORA] Iniciando remo√ß√£o de: $DOMAIN" | tee -a "$LOG_FILE"

# üîê Solicita senha root do MariaDB
TRY=1
while [ $TRY -le 3 ]; do
  read -s -p "üîê Digite a senha root do MariaDB: " MYSQL_ROOT_PASS
  echo

  MYSQL_PING=$(podman run --rm --network shared_network docker.io/mysql:5.7 \
    mysqladmin ping -h mariadb-container -uroot -p"$MYSQL_ROOT_PASS" 2>&1)

  echo "üîç DEBUG resposta do mysqladmin: $MYSQL_PING"

  if [[ "$MYSQL_PING" == *"mysqld is alive"* ]]; then
    echo "‚úÖ Senha validada com sucesso!" | tee -a "$LOG_FILE"
    break
  else
    echo "‚ùå Senha incorreta ou erro de conex√£o." | tee -a "$LOG_FILE"
    ((TRY++))
  fi

  if [ $TRY -gt 3 ]; then
    echo "‚õî Senha incorreta 3 vezes. Cancelando." | tee -a "$LOG_FILE"
    exit 1
  fi
done

# üíæ Backup do banco de dados (somente se existir)
if podman run --rm --network shared_network docker.io/mysql:5.7 \
  mysql -h mariadb-container -uroot -p"$MYSQL_ROOT_PASS" -e "USE \`$DB_NAME\`;" &>/dev/null; then

  DB_DUMP_PATH="$BACKUP_DIR/${SITE_NAME}_db_$DATA_HORA.sql"
  echo "üß† Realizando backup do banco de dados..." | tee -a "$LOG_FILE"
  podman run --rm --network shared_network -e MYSQL_PWD="$MYSQL_ROOT_PASS" docker.io/mysql:5.7 \
    bash -c "mysqldump -h mariadb-container -uroot $DB_NAME" > "$DB_DUMP_PATH"
  echo "üíæ Backup do banco salvo em: $DB_DUMP_PATH" | tee -a "$LOG_FILE"
else
  echo "‚ö†Ô∏è Banco de dados $DB_NAME n√£o encontrado. Backup n√£o realizado." | tee -a "$LOG_FILE"
fi

# üß± Remo√ß√£o do container
if podman ps -a --format "{{.Names}}" | grep -q "^${CONTAINER_NAME}$"; then
  echo "üõë Removendo container: $CONTAINER_NAME" | tee -a "$LOG_FILE"
  podman stop "$CONTAINER_NAME" &>>"$LOG_FILE"
  podman rm "$CONTAINER_NAME" &>>"$LOG_FILE"
else
  echo "‚ö†Ô∏è Container $CONTAINER_NAME n√£o encontrado." | tee -a "$LOG_FILE"
fi

# üßæ Remo√ß√£o do banco de dados e usu√°rio
echo "üóë Removendo banco de dados e usu√°rio do MariaDB..." | tee -a "$LOG_FILE"
podman run --rm --network shared_network -e MYSQL_PWD="$MYSQL_ROOT_PASS" docker.io/mysql:5.7 \
  mysql -h mariadb-container -uroot -e "
    DROP DATABASE IF EXISTS \`$DB_NAME\`;
    DROP USER IF EXISTS '$DB_USER'@'%';
    FLUSH PRIVILEGES;" &>>"$LOG_FILE"

# üóÇ Remo√ß√£o do arquivo do Caddy
if [ -f "$CADDY_FILE" ]; then
  rm "$CADDY_FILE"
  echo "üóÇ Arquivo do Caddy removido: $CADDY_FILE" | tee -a "$LOG_FILE"
else
  echo "‚ö†Ô∏è Arquivo do Caddy n√£o encontrado: $CADDY_FILE" | tee -a "$LOG_FILE"
fi

# üîÅ Recarrega Caddy
podman exec caddy caddy reload --config /etc/caddy/Caddyfile &>>"$LOG_FILE" \
  && echo "üîÅ Caddy recarregado." | tee -a "$LOG_FILE"

# üíæ Backup e remo√ß√£o do diret√≥rio do site
echo "üîé Verificando diret√≥rio: $SITE_DIR" | tee -a "$LOG_FILE"

if [ -d "$SITE_DIR" ]; then
  BACKUP_PATH="$BACKUP_DIR/${SITE_NAME}_files_$DATA_HORA.tar.gz"
  tar -czf "$BACKUP_PATH" "$SITE_DIR"
  echo "üíæ Backup dos arquivos salvo em: $BACKUP_PATH" | tee -a "$LOG_FILE"

  # üßπ For√ßa remo√ß√£o do wp-config.php caso exista antes do rm -rf
  if [ -f "$SITE_DIR/wp-config.php" ]; then
    echo "‚ö†Ô∏è wp-config.php detectado antes da remo√ß√£o do diret√≥rio. For√ßando com Podman..." | tee -a "$LOG_FILE"
    podman run --rm --userns=keep-id -v "$SITE_DIR:/target" alpine sh -c 'rm -f /target/wp-config.php'

    if [ ! -f "$SITE_DIR/wp-config.php" ]; then
      echo "üßπ wp-config.php removido com sucesso via container." | tee -a "$LOG_FILE"
    else
      echo "‚õî Falha ao remover wp-config.php. Verifique permiss√µes." | tee -a "$LOG_FILE"
    fi
  fi

  # Agora sim remove o diret√≥rio todo
  if ! rm -rf "$SITE_DIR"; then
    echo "‚õî Falha ao remover diret√≥rio via rm -rf. Tentando via Podman..." | tee -a "$LOG_FILE"
    podman run --rm --userns=keep-id -v "$SITE_DIR:/target" alpine rm -rf /target/*
    echo "‚úÖ Diret√≥rio limpo via container." | tee -a "$LOG_FILE"
  else
    echo "üßπ Diret√≥rio do site removido: $SITE_DIR" | tee -a "$LOG_FILE"
  fi
else
  echo "‚ö†Ô∏è Diret√≥rio do site n√£o encontrado ou inacess√≠vel: $SITE_DIR" | tee -a "$LOG_FILE"
fi

# ‚úÖ Fim
echo -e "‚úÖ Site $DOMAIN removido com seguran√ßa!" | tee -a "$LOG_FILE"
